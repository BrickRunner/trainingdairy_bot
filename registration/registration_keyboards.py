"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder


def get_gender_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üë® –ú—É–∂—Å–∫–æ–π", callback_data="reg_gender:male"),
        InlineKeyboardButton(text="üë© –ñ–µ–Ω—Å–∫–∏–π", callback_data="reg_gender:female")
    )
    return builder.as_markup()


def get_training_types_keyboard(selected_types: list) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫

    Args:
        selected_types: –°–ø–∏—Å–æ–∫ —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
    """
    builder = InlineKeyboardBuilder()

    # –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
    all_types = [
        ("üèÉ –ö—Ä–æ—Å—Å", "–∫—Ä–æ—Å—Å"),
        ("üèä –ü–ª–∞–≤–∞–Ω–∏–µ", "–ø–ª–∞–≤–∞–Ω–∏–µ"),
        ("üö¥ –í–µ–ª–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", "–≤–µ–ª–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞"),
        ("üí™ –°–∏–ª–æ–≤–∞—è", "—Å–∏–ª–æ–≤–∞—è"),
        ("‚ö° –ò–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–∞—è", "–∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–∞—è"),
        ("üßò –î—Ä—É–≥–æ–µ", "–¥—Ä—É–≥–æ–µ")
    ]

    for display_name, type_value in all_types:
        # –î–æ–±–∞–≤–ª—è–µ–º –≥–∞–ª–æ—á–∫—É –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤
        text = f"‚úÖ {display_name}" if type_value in selected_types else display_name
        builder.button(text=text, callback_data=f"reg_toggle_type:{type_value}")

    builder.adjust(2)  # –ü–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥

    # –ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (–∞–∫—Ç–∏–≤–Ω–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç–∏–ø)
    if selected_types:
        builder.row(
            InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="reg_confirm_types")
        )

    return builder.as_markup()


def get_skip_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –ø—Ä–æ–ø—É—Å–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="reg_skip")
    )
    return builder.as_markup()
