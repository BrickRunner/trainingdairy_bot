"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–µ–π –∏ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
"""
import aiosqlite
import os
from datetime import datetime, timedelta
from aiogram import Bot

from database.queries import get_training_statistics, get_user_settings, update_user_setting


async def check_and_notify_goal_progress(bot: Bot, user_id: int):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–µ–¥–µ–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    settings = await get_user_settings(user_id)
    if not settings:
        return

    weekly_volume_goal = settings.get('weekly_volume_goal')
    weekly_trainings_goal = settings.get('weekly_trainings_goal')
    distance_unit = settings.get('distance_unit', '–∫–º')

    # –ï—Å–ª–∏ —Ü–µ–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    if not weekly_volume_goal and not weekly_trainings_goal:
        return

    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
    stats = await get_training_statistics(user_id, 'week')
    total_distance = stats['total_distance']
    total_count = stats['total_count']

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏
    today = datetime.now().date()
    current_week = today.strftime('%Y-%W')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –ª–∏ —É–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–∏ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ
    last_notification_week = settings.get('last_goal_notification_week')
    goal_achieved_this_week = (last_notification_week == current_week)

    # === –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–ò–ñ–ï–ù–ò–Ø –¶–ï–õ–ò –ü–û –û–ë–™–Å–ú–£ ===
    if weekly_volume_goal and not goal_achieved_this_week:
        progress_percent = (total_distance / weekly_volume_goal) * 100 if weekly_volume_goal > 0 else 0

        # –ï—Å–ª–∏ —Ü–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ (–æ–¥–∏–Ω —Ä–∞–∑)
        if progress_percent >= 100:
            await bot.send_message(
                user_id,
                f"üéâ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</b> üéâ\n\n"
                f"–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –Ω–µ–¥–µ–ª—å–Ω–æ–π —Ü–µ–ª–∏ –ø–æ –æ–±—ä—ë–º—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫!\n\n"
                f"üéØ –¶–µ–ª—å: {weekly_volume_goal} {distance_unit}\n"
                f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {total_distance:.1f} {distance_unit} ({progress_percent:.0f}%)\n\n"
                f"üí™ –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!",
                parse_mode="HTML"
            )
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
            await update_user_setting(user_id, 'last_goal_notification_week', current_week)
            return  # –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è

        # === –ú–û–¢–ò–í–ê–¶–ò–û–ù–ù–´–ï –°–û–û–ë–©–ï–ù–ò–Ø –û –ü–†–û–ì–†–ï–°–°–ï ===
        remaining = weekly_volume_goal - total_distance

        # –°–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        if 80 <= progress_percent < 100:
            # –û—Å—Ç–∞–ª–æ—Å—å –º–∞–ª–æ - –º–æ—Ç–∏–≤–∏—Ä—É–µ–º
            await bot.send_message(
                user_id,
                f"üî• <b>–ü–æ—á—Ç–∏ —É —Ü–µ–ª–∏!</b>\n\n"
                f"–û—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ <b>{remaining:.1f} {distance_unit}</b> –¥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–µ–¥–µ–ª—å–Ω–æ–π —Ü–µ–ª–∏!\n\n"
                f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {total_distance:.1f}/{weekly_volume_goal} {distance_unit} ({progress_percent:.0f}%)\n\n"
                f"üí™ –ú–æ–ª–æ–¥–µ—Ü! –ï—â—ë –Ω–µ–º–Ω–æ–≥–æ!",
                parse_mode="HTML"
            )
        elif 50 <= progress_percent < 80:
            # –ü–æ–ª–æ–≤–∏–Ω–∞ –ø—É—Ç–∏ - –ø–æ–¥–¥–µ—Ä–∂–∫–∞
            await bot.send_message(
                user_id,
                f"üí™ <b>–û—Ç–ª–∏—á–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å!</b>\n\n"
                f"–í—ã –ø—Ä–æ—à–ª–∏ –±–æ–ª—å—à–µ –ø–æ–ª–æ–≤–∏–Ω—ã –ø—É—Ç–∏ –∫ —Ü–µ–ª–∏!\n\n"
                f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {total_distance:.1f}/{weekly_volume_goal} {distance_unit} ({progress_percent:.0f}%)\n"
                f"üìâ –û—Å—Ç–∞–ª–æ—Å—å: {remaining:.1f} {distance_unit}\n\n"
                f"üöÄ –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!",
                parse_mode="HTML"
            )

    # === –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–ò–ñ–ï–ù–ò–Ø –¶–ï–õ–ò –ü–û –ö–û–õ–ò–ß–ï–°–¢–í–£ –¢–†–ï–ù–ò–†–û–í–û–ö ===
    if weekly_trainings_goal and not goal_achieved_this_week:
        trainings_progress = (total_count / weekly_trainings_goal) * 100 if weekly_trainings_goal > 0 else 0

        if trainings_progress >= 100 and (not weekly_volume_goal or progress_percent < 100):
            # –¶–µ–ª—å –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ (–Ω–æ –Ω–µ –ø–æ –æ–±—ä—ë–º—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å)
            await bot.send_message(
                user_id,
                f"üéâ <b>–¶–µ–ª—å –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞!</b>\n\n"
                f"üéØ –¶–µ–ª—å: {weekly_trainings_goal} —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n"
                f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {total_count} —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n\n"
                f"üí™ –û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è!",
                parse_mode="HTML"
            )


async def send_motivational_message_after_training(bot: Bot, user_id: int):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    –£—á–∏—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∫ –Ω–µ–¥–µ–ª—å–Ω–æ–π —Ü–µ–ª–∏

    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    try:
        await check_and_notify_goal_progress(bot, user_id)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
