"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –±–æ—Ç–∞
"""

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder


def get_main_menu_keyboard() -> ReplyKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    builder = ReplyKeyboardBuilder()
    builder.row(
        KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É"),
        KeyboardButton(text="üìä –ú–æ–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏")
    )
    builder.row(
        KeyboardButton(text="üìà –ì—Ä–∞—Ñ–∏–∫–∏"),
        KeyboardButton(text="üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è")
    )
    builder.row(
        KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
        KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å")
    )
    return builder.as_markup(resize_keyboard=True)


def get_training_types_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üèÉ –ö—Ä–æ—Å—Å", callback_data="training_type:–∫—Ä–æ—Å—Å")
    )
    builder.row(
        InlineKeyboardButton(text="üèä –ü–ª–∞–≤–∞–Ω–∏–µ", callback_data="training_type:–ø–ª–∞–≤–∞–Ω–∏–µ")
    )
    builder.row(
        InlineKeyboardButton(text="üö¥ –í–µ–ª–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", callback_data="training_type:–≤–µ–ª–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞")
    )
    builder.row(
        InlineKeyboardButton(text="üí™ –°–∏–ª–æ–≤–∞—è", callback_data="training_type:—Å–∏–ª–æ–≤–∞—è")
    )
    builder.row(
        InlineKeyboardButton(text="‚ö° –ò–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–∞—è", callback_data="training_type:–∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–∞—è")
    )
    builder.row(
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")
    )
    return builder.as_markup()


def get_cancel_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã"""
    builder = ReplyKeyboardBuilder()
    builder.row(KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"))
    return builder.as_markup(resize_keyboard=True)


def get_skip_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø—Ä–æ–ø—É—Å–∫–∞ –∏ –æ—Ç–º–µ–Ω—ã"""
    builder = ReplyKeyboardBuilder()
    builder.row(
        KeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"),
        KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
    )
    return builder.as_markup(resize_keyboard=True)


def get_fatigue_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è —É—Å—Ç–∞–ª–æ—Å—Ç–∏"""
    builder = InlineKeyboardBuilder()
    for i in range(1, 11):
        builder.button(text=str(i), callback_data=f"fatigue:{i}")
    builder.adjust(5)  # 5 –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ä—è–¥—É
    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel"))
    return builder.as_markup()


def get_period_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìÖ –ù–µ–¥–µ–ª—è", callback_data="period:week")
    )
    builder.row(
        InlineKeyboardButton(text="üìÖ 2 –Ω–µ–¥–µ–ª–∏", callback_data="period:2weeks")
    )
    builder.row(
        InlineKeyboardButton(text="üìÖ –ú–µ—Å—è—Ü", callback_data="period:month")
    )
    builder.row(
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")
    )
    return builder.as_markup()


def get_date_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"""
    builder = ReplyKeyboardBuilder()
    builder.row(
        KeyboardButton(text="üìÖ –°–µ–≥–æ–¥–Ω—è"),
        KeyboardButton(text="üìÖ –í—á–µ—Ä–∞")
    )
    builder.row(
        KeyboardButton(text="üìù –í–≤–µ—Å—Ç–∏ –¥–∞—Ç—É"),
        KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
    )
    return builder.as_markup(resize_keyboard=True)


def get_trainings_list_keyboard(trainings: list, period: str) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ (–∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π)
    
    Args:
        trainings: –°–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏–∑ –ë–î
        period: –¢–µ–∫—É—â–∏–π –ø–µ—Ä–∏–æ–¥ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    """
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∫–∞–∂–¥–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ (–º–∞–∫—Å–∏–º—É–º 15)
    for idx, training in enumerate(trainings[:15], 1):
        # –≠–º–æ–¥–∑–∏ –¥–ª—è —Ç–∏–ø–æ–≤
        type_emoji = {
            '–∫—Ä–æ—Å—Å': 'üèÉ',
            '–ø–ª–∞–≤–∞–Ω–∏–µ': 'üèä',
            '–≤–µ–ª–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞': 'üö¥',
            '—Å–∏–ª–æ–≤–∞—è': 'üí™',
            '–∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–∞—è': '‚ö°'
        }
        
        t_type = training['type']
        emoji = type_emoji.get(t_type, 'üìù')
        
        # –ü–∞—Ä—Å–∏–º –¥–∞—Ç—É –¥–ª—è –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        from datetime import datetime
        date = datetime.strptime(training['date'], '%Y-%m-%d').strftime('%d.%m')
        
        # –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏: "‚Ññ1 üèÉ 15.01"
        button_text = f"‚Ññ{idx} {emoji} {date}"
        
        # –í callback_data –ø–µ—Ä–µ–¥–∞–µ–º ID —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ –ø–µ—Ä–∏–æ–¥
        builder.button(
            text=button_text,
            callback_data=f"training_detail:{training['id']}:{period}"
        )
    
    # –†–∞–∑–º–µ—â–∞–µ–º –ø–æ 3 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—É
    builder.adjust(3)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ä—è–¥—É
    builder.row(
        InlineKeyboardButton(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–µ—Ä–∏–æ–¥–∞–º", callback_data="back_to_periods")
    )
    
    return builder.as_markup()