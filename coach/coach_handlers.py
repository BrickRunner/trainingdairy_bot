"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç—Ä–µ–Ω–µ—Ä—Å–∫–∏–º —Ä–∞–∑–¥–µ–ª–æ–º
"""

import logging
from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext

from coach.coach_keyboards import (
    get_coach_main_menu,
    get_students_list_keyboard,
    get_student_detail_keyboard,
    get_confirm_remove_student_keyboard,
    get_add_coach_keyboard,
    get_student_coach_info_keyboard,
    get_confirm_remove_coach_keyboard
)
from coach.coach_queries import (
    is_user_coach,
    get_coach_link_code,
    get_coach_students,
    remove_student_from_coach,
    find_coach_by_code,
    add_student_to_coach,
    get_student_coach,
    remove_coach_from_student
)
from bot.fsm import CoachStates
from database.queries import get_user

logger = logging.getLogger(__name__)
router = Router()


# ========== –¢–†–ï–ù–ï–†–°–ö–ê–Ø –°–¢–û–†–û–ù–ê ==========

@router.callback_query(F.data == "coach:menu")
async def show_coach_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ç—Ä–µ–Ω–µ—Ä–∞"""
    user_id = callback.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç—Ä–µ–Ω–µ—Ä
    if not await is_user_coach(user_id):
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É", show_alert=True)
        return

    await callback.message.edit_text(
        "üë®‚Äçüè´ <b>–†–∞–∑–¥–µ–ª —Ç—Ä–µ–Ω–µ—Ä–∞</b>\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ —É—á–µ–Ω–∏–∫–∞–º–∏, "
        "–ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å.",
        reply_markup=get_coach_main_menu()
    )
    await callback.answer()


@router.callback_query(F.data == "coach:students")
async def show_students_list(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤"""
    user_id = callback.from_user.id

    students = await get_coach_students(user_id)

    if not students:
        await callback.message.edit_text(
            "üë• <b>–ú–æ–∏ —É—á–µ–Ω–∏–∫–∏</b>\n\n"
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —É—á–µ–Ω–∏–∫–æ–≤.\n\n"
            "–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —É—á–µ–Ω–∏–∫–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–º—É —Å–≤–æ—é —Å—Å—ã–ª–∫—É:\n"
            "üëâ –¢—Ä–µ–Ω–µ—Ä ‚Üí –°—Å—ã–ª–∫–∞ –¥–ª—è —É—á–µ–Ω–∏–∫–æ–≤",
            reply_markup=get_students_list_keyboard([])
        )
    else:
        text = f"üë• <b>–ú–æ–∏ —É—á–µ–Ω–∏–∫–∏</b> ({len(students)})\n\n"
        text += "–í—ã–±–µ—Ä–∏—Ç–µ —É—á–µ–Ω–∏–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:\n"

        await callback.message.edit_text(
            text,
            reply_markup=get_students_list_keyboard(students)
        )

    await callback.answer()


@router.callback_query(F.data.startswith("coach:student:"))
async def show_student_detail(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ —É—á–µ–Ω–∏–∫–∞"""
    student_id = int(callback.data.split(":")[2])
    coach_id = callback.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ —É—á–µ–Ω–∏–∫ –¥–∞–Ω–Ω–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞
    students = await get_coach_students(coach_id)
    student = next((s for s in students if s['id'] == student_id), None)

    if not student:
        await callback.answer("–£—á–µ–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return

    user_info = await get_user(student_id)

    text = f"üë§ <b>{student['name']}</b>\n\n"
    text += f"üì± Telegram: @{student['username']}\n"
    text += f"üìÖ –ü–æ–¥–∫–ª—é—á—ë–Ω: {student['connected_at'][:10]}\n"

    await callback.message.edit_text(
        text,
        reply_markup=get_student_detail_keyboard(student_id)
    )
    await callback.answer()


@router.callback_query(F.data.startswith("coach:student_trainings:"))
async def show_student_trainings(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —É—á–µ–Ω–∏–∫–∞"""
    student_id = int(callback.data.split(":")[2])

    # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ —É—á–µ–Ω–∏–∫–∞
    await callback.answer("–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)


@router.callback_query(F.data.startswith("coach:student_stats:"))
async def show_student_stats(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —É—á–µ–Ω–∏–∫–∞"""
    student_id = int(callback.data.split(":")[2])

    # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É—á–µ–Ω–∏–∫–∞
    await callback.answer("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)


@router.callback_query(F.data.startswith("coach:student_health:"))
async def show_student_health(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∑–¥–æ—Ä–æ–≤—å–µ —É—á–µ–Ω–∏–∫–∞"""
    student_id = int(callback.data.split(":")[2])

    # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–¥–æ—Ä–æ–≤—å—è —É—á–µ–Ω–∏–∫–∞
    await callback.answer("–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–¥–æ—Ä–æ–≤—å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)


@router.callback_query(F.data.startswith("coach:remove_student:"))
async def confirm_remove_student(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —É—á–µ–Ω–∏–∫–∞"""
    student_id = int(callback.data.split(":")[2])
    coach_id = callback.from_user.id

    students = await get_coach_students(coach_id)
    student = next((s for s in students if s['id'] == student_id), None)

    if not student:
        await callback.answer("–£—á–µ–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return

    await callback.message.edit_text(
        f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —É—á–µ–Ω–∏–∫–∞ <b>{student['name']}</b>?\n\n"
        f"–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —É—á–µ–Ω–∏–∫ –±–æ–ª—å—à–µ –Ω–µ —Å–º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å –≤–∞—à–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.",
        reply_markup=get_confirm_remove_student_keyboard(student_id)
    )
    await callback.answer()


@router.callback_query(F.data.startswith("coach:confirm_remove:"))
async def remove_student(callback: CallbackQuery):
    """–£–¥–∞–ª–∏—Ç—å —É—á–µ–Ω–∏–∫–∞"""
    student_id = int(callback.data.split(":")[2])
    coach_id = callback.from_user.id

    await remove_student_from_coach(coach_id, student_id)

    await callback.message.edit_text(
        "‚úÖ –£—á–µ–Ω–∏–∫ —É–¥–∞–ª—ë–Ω",
        reply_markup=get_students_list_keyboard([])
    )
    await callback.answer()


@router.callback_query(F.data == "coach:link")
async def show_coach_link(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —É—á–µ–Ω–∏–∫–æ–≤"""
    user_id = callback.from_user.id

    link_code = await get_coach_link_code(user_id)

    if not link_code:
        await callback.answer("–û—à–∏–±–∫–∞: –∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return

    bot_username = (await callback.bot.me()).username

    text = "üîó <b>–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è —É—á–µ–Ω–∏–∫–æ–≤</b>\n\n"
    text += f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É —Å–≤–æ–∏–º —É—á–µ–Ω–∏–∫–∞–º:\n\n"
    text += f"<code>https://t.me/{bot_username}?start=coach_{link_code}</code>\n\n"
    text += f"–ò–ª–∏ –∫–æ–¥ –¥–ª—è –≤–≤–æ–¥–∞ –≤—Ä—É—á–Ω—É—é:\n"
    text += f"<code>{link_code}</code>\n\n"
    text += "–ü–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ —Å—Å—ã–ª–∫–µ —É—á–µ–Ω–∏–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ –≤–∞–º."

    await callback.message.edit_text(
        text,
        reply_markup=get_coach_main_menu()
    )
    await callback.answer()


# ========== –£–ß–ï–ù–ò–ß–ï–°–ö–ê–Ø –°–¢–û–†–û–ù–ê ==========

@router.callback_query(F.data == "student:my_coach")
async def show_my_coach(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–µ–Ω–µ—Ä–µ"""
    user_id = callback.from_user.id

    coach = await get_student_coach(user_id)

    if not coach:
        text = "üë®‚Äçüè´ <b>–ú–æ–π —Ç—Ä–µ–Ω–µ—Ä</b>\n\n"
        text += "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ç—Ä–µ–Ω–µ—Ä–∞.\n\n"
        text += "–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∞, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ —É –Ω–µ–≥–æ –∫–æ–¥ "
        text += "–∏–ª–∏ —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è."

        await callback.message.edit_text(
            text,
            reply_markup=get_add_coach_keyboard()
        )
    else:
        text = f"üë®‚Äçüè´ <b>–ú–æ–π —Ç—Ä–µ–Ω–µ—Ä</b>\n\n"
        text += f"üë§ –ò–º—è: {coach['name']}\n"
        text += f"üì± Telegram: @{coach['username']}\n\n"
        text += "–í–∞—à —Ç—Ä–µ–Ω–µ—Ä –º–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤–∞—à–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É."

        await callback.message.edit_text(
            text,
            reply_markup=get_student_coach_info_keyboard()
        )

    await callback.answer()


@router.callback_query(F.data == "student:add_coach")
async def add_coach_prompt(callback: CallbackQuery, state: FSMContext):
    """–ó–∞–ø—Ä–æ—Å–∏—Ç—å –∫–æ–¥ —Ç—Ä–µ–Ω–µ—Ä–∞"""
    await callback.message.edit_text(
        "‚úèÔ∏è <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–µ–Ω–µ—Ä–∞</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —Ç—Ä–µ–Ω–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω –≤–∞–º –æ—Ç–ø—Ä–∞–≤–∏–ª:",
    )
    await state.set_state(CoachStates.waiting_for_coach_code)
    await callback.answer()


@router.message(CoachStates.waiting_for_coach_code)
async def process_coach_code(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—ã–π –∫–æ–¥ —Ç—Ä–µ–Ω–µ—Ä–∞"""
    code = message.text.strip().upper()

    # –ò—â–µ–º —Ç—Ä–µ–Ω–µ—Ä–∞ –ø–æ –∫–æ–¥—É
    coach_id = await find_coach_by_code(code)

    if not coach_id:
        await message.answer(
            "‚ùå –ö–æ–¥ —Ç—Ä–µ–Ω–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω.\n\n"
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∫–æ–¥–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        )
        return

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–≤—è–∑—å
    student_id = message.from_user.id
    success = await add_student_to_coach(coach_id, student_id)

    if success:
        coach = await get_user(coach_id)
        await message.answer(
            f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ —Ç—Ä–µ–Ω–µ—Ä—É!\n\n"
            f"–í–∞—à —Ç—Ä–µ–Ω–µ—Ä: {coach.get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n\n"
            f"–¢–µ–ø–µ—Ä—å —Ç—Ä–µ–Ω–µ—Ä –º–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤–∞—à–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É."
        )

        # –£–≤–µ–¥–æ–º–ª—è–µ–º —Ç—Ä–µ–Ω–µ—Ä–∞
        try:
            student_name = message.from_user.full_name
            await message.bot.send_message(
                coach_id,
                f"üéâ –ù–æ–≤—ã–π —É—á–µ–Ω–∏–∫!\n\n"
                f"–ö –≤–∞–º –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è: {student_name}"
            )
        except Exception as e:
            logger.error(f"Failed to notify coach: {e}")
    else:
        await message.answer(
            "‚ö†Ô∏è –í—ã —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ —ç—Ç–æ–º—É —Ç—Ä–µ–Ω–µ—Ä—É."
        )

    await state.clear()


@router.callback_query(F.data == "student:remove_coach")
async def confirm_remove_coach(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç —Ç—Ä–µ–Ω–µ—Ä–∞"""
    await callback.message.edit_text(
        "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç —Ç—Ä–µ–Ω–µ—Ä–∞?\n\n"
        "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä –±–æ–ª—å—à–µ –Ω–µ —Å–º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ.",
        reply_markup=get_confirm_remove_coach_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "student:confirm_remove_coach")
async def remove_coach(callback: CallbackQuery):
    """–û—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç —Ç—Ä–µ–Ω–µ—Ä–∞"""
    user_id = callback.from_user.id

    await remove_coach_from_student(user_id)

    await callback.message.edit_text(
        "‚úÖ –í—ã –æ—Ç–∫–ª—é—á–∏–ª–∏—Å—å –æ—Ç —Ç—Ä–µ–Ω–µ—Ä–∞",
        reply_markup=get_add_coach_keyboard()
    )
    await callback.answer()
