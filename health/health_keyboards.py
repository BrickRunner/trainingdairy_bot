"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –º–æ–¥—É–ª—è –∑–¥–æ—Ä–æ–≤—å—è
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from typing import Optional, Dict


def get_health_menu_keyboard() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ä–∞–∑–¥–µ–ª–∞ –∑–¥–æ—Ä–æ–≤—å—è"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìù –í–Ω–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ", callback_data="health:add_metrics")
    )
    builder.row(
        InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –≥—Ä–∞—Ñ–∏–∫–∏", callback_data="health:stats_and_graphs")
    )
    builder.row(
        InlineKeyboardButton(text="üò¥ –ê–Ω–∞–ª–∏–∑ —Å–Ω–∞", callback_data="health:sleep_analysis")
    )
    builder.row(
        InlineKeyboardButton(text="üìÑ –≠–∫—Å–ø–æ—Ä—Ç –≤ PDF", callback_data="health:export_pdf")
    )
    builder.row(
        InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")
    )
    return builder.as_markup()


def get_quick_input_keyboard(today_metrics: Optional[Dict] = None) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö

    –ï—Å–ª–∏ today_metrics –∑–∞–ø–æ–ª–Ω–µ–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
    –ï—Å–ª–∏ –Ω–µ—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞
    """
    builder = InlineKeyboardBuilder()

    # –ï—Å–ª–∏ –µ—Å—Ç—å –º–µ—Ç—Ä–∏–∫–∏ —Å–µ–≥–æ–¥–Ω—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    if today_metrics:
        # –ü—É–ª—å—Å
        if today_metrics.get('morning_pulse'):
            builder.row(
                InlineKeyboardButton(
                    text=f"üíó –ü—É–ª—å—Å: {today_metrics['morning_pulse']} —É–¥/–º–∏–Ω",
                    callback_data="health:input_pulse"
                )
            )
        else:
            builder.row(
                InlineKeyboardButton(text="üíó –î–æ–±–∞–≤–∏—Ç—å –ø—É–ª—å—Å", callback_data="health:input_pulse")
            )

        # –í–µ—Å
        if today_metrics.get('weight'):
            builder.row(
                InlineKeyboardButton(
                    text=f"‚öñÔ∏è –í–µ—Å: {today_metrics['weight']} –∫–≥",
                    callback_data="health:input_weight"
                )
            )
        else:
            builder.row(
                InlineKeyboardButton(text="‚öñÔ∏è –î–æ–±–∞–≤–∏—Ç—å –≤–µ—Å", callback_data="health:input_weight")
            )

        # –°–æ–Ω
        if today_metrics.get('sleep_duration'):
            duration = today_metrics['sleep_duration']
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –º–∏–Ω—É—Ç—ã, –æ–∫—Ä—É–≥–ª—è–µ–º, –ø–æ—Ç–æ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ —á–∞—Å—ã –∏ –º–∏–Ω—É—Ç—ã
            # –≠—Ç–æ –∏–∑–±–µ–≥–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º —Å —Ç–æ—á–Ω–æ—Å—Ç—å—é float
            total_minutes = round(duration * 60)
            hours = total_minutes // 60
            minutes = total_minutes % 60
            sleep_text = f"{hours}—á {minutes}–º" if minutes > 0 else f"{hours}—á"

            builder.row(
                InlineKeyboardButton(
                    text=f"üò¥ –°–æ–Ω: {sleep_text}",
                    callback_data="health:input_sleep"
                )
            )
        else:
            builder.row(
                InlineKeyboardButton(text="üò¥ –î–æ–±–∞–≤–∏—Ç—å —Å–æ–Ω", callback_data="health:input_sleep")
            )
    else:
        # –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–≤–æ–¥–∞
        builder.row(
            InlineKeyboardButton(text="‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –≤—Å—ë", callback_data="health:input_all")
        )
        builder.row(
            InlineKeyboardButton(text="üíó –¢–æ–ª—å–∫–æ –ø—É–ª—å—Å", callback_data="health:input_pulse")
        )
        builder.row(
            InlineKeyboardButton(text="‚öñÔ∏è –¢–æ–ª—å–∫–æ –≤–µ—Å", callback_data="health:input_weight")
        )
        builder.row(
            InlineKeyboardButton(text="üò¥ –¢–æ–ª—å–∫–æ —Å–æ–Ω", callback_data="health:input_sleep")
        )

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞ –¥—Ä—É–≥—É—é –¥–∞—Ç—É
    builder.row(
        InlineKeyboardButton(text="üìÖ –í–≤–µ—Å—Ç–∏ –∑–∞ –¥—Ä—É–≥—É—é –¥–∞—Ç—É", callback_data="health:choose_date")
    )

    builder.row(
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="health:menu")
    )
    return builder.as_markup()


def get_sleep_quality_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ —Å–Ω–∞"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üò¥ 1 - –û—á–µ–Ω—å –ø–ª–æ—Ö–æ", callback_data="sleep_quality:1")
    )
    builder.row(
        InlineKeyboardButton(text="üòï 2 - –ü–ª–æ—Ö–æ", callback_data="sleep_quality:2")
    )
    builder.row(
        InlineKeyboardButton(text="üòê 3 - –ù–æ—Ä–º–∞–ª—å–Ω–æ", callback_data="sleep_quality:3")
    )
    builder.row(
        InlineKeyboardButton(text="üôÇ 4 - –•–æ—Ä–æ—à–æ", callback_data="sleep_quality:4")
    )
    builder.row(
        InlineKeyboardButton(text="üòä 5 - –û—Ç–ª–∏—á–Ω–æ", callback_data="sleep_quality:5")
    )
    builder.row(
        InlineKeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="sleep_quality:skip")
    )
    return builder.as_markup()


def get_stats_period_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìÖ –≠—Ç–∞ –Ω–µ–¥–µ–ª—è", callback_data="health_stats_graphs:week")
    )
    builder.row(
        InlineKeyboardButton(text="üìÖ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 14 –¥–Ω–µ–π", callback_data="health_stats_graphs:14")
    )
    builder.row(
        InlineKeyboardButton(text="üìÖ –≠—Ç–æ—Ç –º–µ—Å—è—Ü", callback_data="health_stats_graphs:month")
    )
    builder.row(
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="health:menu")
    )
    return builder.as_markup()


def get_graphs_period_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ (—É—Å—Ç–∞—Ä–µ–≤—à–∞—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ get_stats_period_keyboard)"""
    return get_stats_period_keyboard()


def get_export_period_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ PDF"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìÖ –ü–æ–ª–≥–æ–¥–∞", callback_data="health_export:180")
    )
    builder.row(
        InlineKeyboardButton(text="üìÖ –ì–æ–¥", callback_data="health_export:365")
    )
    builder.row(
        InlineKeyboardButton(text="üìÖ –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥", callback_data="health_export:custom")
    )
    builder.row(
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="health:menu")
    )
    return builder.as_markup()


def get_cancel_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã"""
    builder = ReplyKeyboardBuilder()
    builder.row(KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"))
    return builder.as_markup(resize_keyboard=True)


def get_skip_cancel_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø—Ä–æ–ø—É—Å–∫–∞ –∏ –æ—Ç–º–µ–Ω—ã"""
    builder = ReplyKeyboardBuilder()
    builder.row(
        KeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"),
        KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
    )
    return builder.as_markup(resize_keyboard=True)


def get_date_choice_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã –≤–Ω–µ—Å–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (–±—ã—Å—Ç—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º)"""
    builder = ReplyKeyboardBuilder()
    builder.row(
        KeyboardButton(text="üìÖ –°–µ–≥–æ–¥–Ω—è"),
        KeyboardButton(text="üìÖ –í—á–µ—Ä–∞"),
        KeyboardButton(text="üìÖ –ü–æ–∑–∞–≤—á–µ—Ä–∞")
    )
    builder.row(
        KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
    )
    return builder.as_markup(resize_keyboard=True)


def get_daily_reminder_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="‚úÖ –î–∞, –≤–Ω–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ", callback_data="daily_reminder:yes")
    )
    builder.row(
        InlineKeyboardButton(text="‚ùå –ù–µ—Ç, –ø–æ–∑–∂–µ", callback_data="daily_reminder:no")
    )
    return builder.as_markup()
