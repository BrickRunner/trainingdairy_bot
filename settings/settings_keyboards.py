"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder


def get_settings_menu_keyboard() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="settings:profile")
    )
    builder.row(
        InlineKeyboardButton(text="üíì –ü—É–ª—å—Å–æ–≤—ã–µ –∑–æ–Ω—ã", callback_data="settings:pulse_zones")
    )
    builder.row(
        InlineKeyboardButton(text="üéØ –¶–µ–ª–∏", callback_data="settings:goals")
    )
    builder.row(
        InlineKeyboardButton(text="üìè –ï–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è", callback_data="settings:units")
    )
    builder.row(
        InlineKeyboardButton(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="settings:notifications")
    )
    builder.row(
        InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")
    )
    
    return builder.as_markup()


def get_profile_settings_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—Ñ–∏–ª—è"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="‚úèÔ∏è –ò–º—è", callback_data="settings:profile:name")
    )
    builder.row(
        InlineKeyboardButton(text="üéÇ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", callback_data="settings:profile:birth_date")
    )
    builder.row(
        InlineKeyboardButton(text="‚ößÔ∏è –ü–æ–ª", callback_data="settings:profile:gender")
    )
    builder.row(
        InlineKeyboardButton(text="‚öñÔ∏è –í–µ—Å", callback_data="settings:profile:weight")
    )
    builder.row(
        InlineKeyboardButton(text="üìè –†–æ—Å—Ç", callback_data="settings:profile:height")
    )
    builder.row(
        InlineKeyboardButton(text="üèÉ –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–∏–ø—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫", callback_data="settings:profile:main_types")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="settings:menu")
    )
    
    return builder.as_markup()


def get_pulse_zones_menu_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—É–ª—å—Å–æ–≤—ã—Ö –∑–æ–Ω"""
    builder = InlineKeyboardBuilder()

    # TODO: –í–µ—Ä–Ω—É—Ç—å –ø–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è AI
    # builder.row(
    #     InlineKeyboardButton(text="üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç", callback_data="settings:pulse:auto")
    # )
    builder.row(
        InlineKeyboardButton(text="‚úèÔ∏è –†—É—á–Ω–æ–π –≤–≤–æ–¥", callback_data="settings:pulse:manual")
    )
    # –£–±—Ä–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –∑–æ–Ω—ã" - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ —Ç–∞–∫ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –º–µ–Ω—é
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="settings:menu")
    )

    return builder.as_markup()


def get_goals_settings_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ü–µ–ª–µ–π"""
    builder = InlineKeyboardBuilder()

    # –ù–µ–¥–µ–ª—å–Ω—ã–π –æ–±—ä–µ–º
    builder.row(
        InlineKeyboardButton(text="üìä –ù–µ–¥–µ–ª—å–Ω—ã–π –æ–±—ä–µ–º", callback_data="settings:goals:volume")
    )

    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
    builder.row(
        InlineKeyboardButton(text="üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫", callback_data="settings:goals:count")
    )

    # –¶–µ–ª–∏ –ø–æ —Ç–∏–ø–∞–º
    builder.row(
        InlineKeyboardButton(text="üèÉ –¶–µ–ª–∏ –ø–æ —Ç–∏–ø–∞–º", callback_data="settings:goals:by_type")
    )

    # –¶–µ–ª–µ–≤–æ–π –≤–µ—Å
    builder.row(
        InlineKeyboardButton(text="‚öñÔ∏è –¶–µ–ª–µ–≤–æ–π –≤–µ—Å", callback_data="settings:goals:weight")
    )

    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="settings:menu")
    )

    return builder.as_markup()


def get_units_settings_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üìè –î–∏—Å—Ç–∞–Ω—Ü–∏—è", callback_data="settings:units:distance")
    )
    builder.row(
        InlineKeyboardButton(text="‚öñÔ∏è –í–µ—Å", callback_data="settings:units:weight")
    )
    builder.row(
        InlineKeyboardButton(text="üìÖ –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã", callback_data="settings:units:date")
    )
    builder.row(
        InlineKeyboardButton(text="üåç –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å", callback_data="settings:units:timezone")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="settings:menu")
    )

    return builder.as_markup()


def get_notifications_settings_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="‚è∞ –í—Ä–µ–º—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –≤–≤–æ–¥–∞", callback_data="settings:notif:daily_time")
    )
    builder.row(
        InlineKeyboardButton(text="üìä –ù–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç", callback_data="settings:notif:weekly_report")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="settings:menu")
    )
    
    return builder.as_markup()


def get_gender_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üë® –ú—É–∂—Å–∫–æ–π", callback_data="gender:male"),
        InlineKeyboardButton(text="üë© –ñ–µ–Ω—Å–∫–∏–π", callback_data="gender:female")
    )
    builder.row(
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="settings:profile")
    )
    
    return builder.as_markup()


def get_training_types_selection_keyboard(selected_types: list) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
    
    Args:
        selected_types: –°–ø–∏—Å–æ–∫ —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤
    """
    builder = InlineKeyboardBuilder()
    
    all_types = [
        ("üèÉ –ö—Ä–æ—Å—Å", "–∫—Ä–æ—Å—Å"),
        ("üèä –ü–ª–∞–≤–∞–Ω–∏–µ", "–ø–ª–∞–≤–∞–Ω–∏–µ"),
        ("üö¥ –í–µ–ª–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", "–≤–µ–ª–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞"),
        ("üí™ –°–∏–ª–æ–≤–∞—è", "—Å–∏–ª–æ–≤–∞—è"),
        ("‚ö° –ò–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–∞—è", "–∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–∞—è")
    ]
    
    for name, type_id in all_types:
        # –î–æ–±–∞–≤–ª—è–µ–º –≥–∞–ª–æ—á–∫—É –µ—Å–ª–∏ —Ç–∏–ø —É–∂–µ –≤—ã–±—Ä–∞–Ω
        text = f"‚úÖ {name}" if type_id in selected_types else name
        builder.row(
            InlineKeyboardButton(
                text=text,
                callback_data=f"toggle_type:{type_id}"
            )
        )
    
    builder.row(
        InlineKeyboardButton(text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", callback_data="save_training_types")
    )
    builder.row(
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="settings:profile")
    )
    
    return builder.as_markup()


def get_distance_unit_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –µ–¥–∏–Ω–∏—Ü –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üìè –ö–∏–ª–æ–º–µ—Ç—Ä—ã (–∫–º)", callback_data="distance_unit:–∫–º"),
        InlineKeyboardButton(text="üìè –ú–∏–ª–∏ (mi)", callback_data="distance_unit:–º–∏–ª–∏")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="settings:units")
    )
    
    return builder.as_markup()


def get_weight_unit_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –µ–¥–∏–Ω–∏—Ü –≤–µ—Å–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="‚öñÔ∏è –ö–∏–ª–æ–≥—Ä–∞–º–º—ã (–∫–≥)", callback_data="weight_unit:–∫–≥"),
        InlineKeyboardButton(text="‚öñÔ∏è –§—É–Ω—Ç—ã (lb)", callback_data="weight_unit:—Ñ—É–Ω—Ç—ã")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="settings:units")
    )
    
    return builder.as_markup()


def get_date_format_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞—Ç—ã"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üìÖ –î–î.–ú–ú.–ì–ì–ì–ì", callback_data="date_format:–î–î.–ú–ú.–ì–ì–ì–ì")
    )
    builder.row(
        InlineKeyboardButton(text="üìÖ –ú–ú/–î–î/–ì–ì–ì–ì", callback_data="date_format:–ú–ú/–î–î/–ì–ì–ì–ì")
    )
    builder.row(
        InlineKeyboardButton(text="üìÖ –ì–ì–ì–ì-–ú–ú-–î–î", callback_data="date_format:–ì–ì–ì–ì-–ú–ú-–î–î")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="settings:units")
    )
    
    return builder.as_markup()


def get_weekday_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –¥–Ω—è –Ω–µ–¥–µ–ª–∏"""
    builder = InlineKeyboardBuilder()
    
    weekdays = [
        "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥",
        "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"
    ]
    
    for day in weekdays:
        builder.row(
            InlineKeyboardButton(text=day, callback_data=f"weekday:{day}")
        )
    
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="settings:notifications")
    )
    
    return builder.as_markup()


def get_training_type_goals_keyboard(main_types: list = None, type_goals: dict = None, distance_unit: str = '–∫–º') -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ü–µ–ª–µ–π –ø–æ —Ç–∏–ø–∞–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫

    Args:
        main_types: –°–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        type_goals: –°–ª–æ–≤–∞—Ä—å —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Ü–µ–ª—è–º–∏ {—Ç–∏–ø: –∑–Ω–∞—á–µ–Ω–∏–µ}
        distance_unit: –ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏
    """
    builder = InlineKeyboardBuilder()

    type_goals = type_goals or {}
    main_types = main_types or []

    # –≠–º–æ–¥–∑–∏ –¥–ª—è —Ç–∏–ø–æ–≤
    type_emoji = {
        '–∫—Ä–æ—Å—Å': 'üèÉ',
        '–ø–ª–∞–≤–∞–Ω–∏–µ': 'üèä',
        '–≤–µ–ª–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞': 'üö¥',
        '—Å–∏–ª–æ–≤–∞—è': 'üí™',
        '–∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–∞—è': '‚ö°'
    }

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∏–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for t_type in main_types:
        emoji = type_emoji.get(t_type, 'üèÉ')

        # –î–ª—è —Å–∏–ª–æ–≤—ã—Ö - –º–∏–Ω—É—Ç—ã, –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö - –∫–º
        if t_type == '—Å–∏–ª–æ–≤–∞—è':
            goal_text = f" ({type_goals[t_type]:.0f} –º–∏–Ω)" if t_type in type_goals else ""
        else:
            goal_text = f" ({type_goals[t_type]} {distance_unit})" if t_type in type_goals else ""

        builder.row(
            InlineKeyboardButton(text=f"{emoji} {t_type.capitalize()}{goal_text}", callback_data=f"type_goal:{t_type}")
        )

    builder.row(
        InlineKeyboardButton(text="üíæ –ì–æ—Ç–æ–≤–æ", callback_data="settings:goals")
    )

    return builder.as_markup()


def get_simple_cancel_keyboard() -> ReplyKeyboardMarkup:
    """–ü—Ä–æ—Å—Ç–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã"""
    builder = ReplyKeyboardBuilder()
    builder.row(KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞"))
    return builder.as_markup(resize_keyboard=True)


def get_cancel_delete_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ—Ç–º–µ–Ω—ã –∏ —É–¥–∞–ª–µ–Ω–∏—è —Ü–µ–ª–∏"""
    builder = ReplyKeyboardBuilder()
    builder.row(
        KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞"),
        KeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å —Ü–µ–ª—å")
    )
    return builder.as_markup(resize_keyboard=True)


def get_timezone_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞"""
    builder = InlineKeyboardBuilder()

    # –í—Å–µ —á–∞—Å–æ–≤—ã–µ –ø–æ—è—Å–∞ –†–æ—Å—Å–∏–∏ (—Å –∑–∞–ø–∞–¥–∞ –Ω–∞ –≤–æ—Å—Ç–æ–∫)
    builder.row(
        InlineKeyboardButton(text="üåç –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥ (UTC+2)", callback_data="timezone:Europe/Kaliningrad")
    )
    builder.row(
        InlineKeyboardButton(text="üåç –ú–æ—Å–∫–≤–∞ (UTC+3)", callback_data="timezone:Europe/Moscow")
    )
    builder.row(
        InlineKeyboardButton(text="üåç –°–∞–º–∞—Ä–∞ (UTC+4)", callback_data="timezone:Europe/Samara")
    )
    builder.row(
        InlineKeyboardButton(text="üåç –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥ (UTC+5)", callback_data="timezone:Asia/Yekaterinburg")
    )
    builder.row(
        InlineKeyboardButton(text="üåç –û–º—Å–∫ (UTC+6)", callback_data="timezone:Asia/Omsk")
    )
    builder.row(
        InlineKeyboardButton(text="üåç –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫ (UTC+7)", callback_data="timezone:Asia/Krasnoyarsk")
    )
    builder.row(
        InlineKeyboardButton(text="üåç –ò—Ä–∫—É—Ç—Å–∫ (UTC+8)", callback_data="timezone:Asia/Irkutsk")
    )
    builder.row(
        InlineKeyboardButton(text="üåç –Ø–∫—É—Ç—Å–∫ (UTC+9)", callback_data="timezone:Asia/Yakutsk")
    )
    builder.row(
        InlineKeyboardButton(text="üåç –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫ (UTC+10)", callback_data="timezone:Asia/Vladivostok")
    )
    builder.row(
        InlineKeyboardButton(text="üåç –ú–∞–≥–∞–¥–∞–Ω (UTC+11)", callback_data="timezone:Asia/Magadan")
    )
    builder.row(
        InlineKeyboardButton(text="üåç –ö–∞–º—á–∞—Ç–∫–∞ (UTC+12)", callback_data="timezone:Asia/Kamchatka")
    )
    builder.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="settings:units")
    )

    return builder.as_markup()
